using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using TaskApi.Entities;

namespace TaskApi.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class UserController : ControllerBase
    {
        private readonly TaskContext _context;

        public UserController(TaskContext context)
        {
            _context = context;
        }
        //Id will be autogenerated
        //we will make username and password unique field
        [HttpPost("auth")]
        public async Task<ActionResult> CreateUser(User user)
        {
            try
            {
                var newUser = _context.Users.Find(user.UserName);
                if (newUser!=null)
                {
                    return BadRequest($"{newUser} is exist,give another username");
                }

                _context.Add(user);
                if (await _context.SaveChangesAsync() != 0)
                {
                    return Ok();
                }
            }
            catch (Exception)
            {
                return StatusCode(StatusCodes.Status500InternalServerError, "Failed due to internet problem");
            }

            return BadRequest();

        }

        [HttpPost]
        public async Task<ActionResult> AuthenticateUser()
        {
            return Ok();
        }

        //can't change Id
        //will get data using emailId
        [HttpPut("{username}")]
        public async Task<ActionResult> UpdateUserInfo(string UserName)
        {
            return Ok();
        }
    }
}